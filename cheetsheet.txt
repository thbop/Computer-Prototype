0000 ld mem reg nul # loads data from memory into register via addresses
0001 set mem val nul # sets memory data as a value
0010 wrt mem reg nul # writes data to memory from registers via addresses

0011 add reg reg reg # adds data in register A plus data in register B and stores the result in register C
0100 sub reg reg reg # subtracts data in register A minus data in register B and stores the result in register C

0101 jmp lin nul nul # jumps to the specified line
0110 biz lin nul nul # braches/jumps to the specified line if the last ALU operation resulted in a zero

1110 dis reg reg reg # displays a pixel at the x location stored in register A; the y stored in register B; and the color stored in register C (rgba)
1111 end nul nul nul # halts the program